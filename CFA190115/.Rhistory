doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc6)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,5])
doc <- Corpus(VectorSource(answer))
doc.copy <- doc
# Clean corpus - plain text
# doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
doc <- Corpus(VectorSource(answer))
doc.copy <- doc
# Clean corpus - plain text
# doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc6 <- stemCompletion(doc6, doc.copy, type = "prevalent")
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
doc <- Corpus(VectorSource(answer))
doc.copy <- doc
# Clean corpus - plain text
# doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc6 <- stemCompletion(doc6, doc3, type = "prevalent")
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
url.frm <- "https://docs.google.com/spreadsheets/d/19taV1maM4t2XItQgcMHZJmBl4vOdkL2qJk1a15Ojul8/pubhtml?gid=400854402&single=true"
data.frm <- readSpreadsheet(url.frm)
answer <- stri_flatten(data.frm[1,5])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
# doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
data.frm <- readSpreadsheet(url.frm)
answer <- stri_flatten(data.frm[1,9])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
# doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
library(tm)
library(stringi)
library(SnowballC)
# Function to read Google Spreadheet
readSpreadsheet <- function(url, sheet = 1){
library(XML)
library(httr)
r <- GET(url)
html <- content(r)
sheets <- readHTMLTable(html, header=FALSE, stringsAsFactors=FALSE)
df <- sheets[[sheet]]
dfClean <- function(df){
nms <- t(df[1,])
names(df) <- nms
df <- df[-1,-1]
df <- df[df[,1] != "",]
row.names(df) <- seq(1,nrow(df))
df
}
dfClean(df)
}
# Read data from Google Spreadsheet into corpus
url.frm <- "https://docs.google.com/spreadsheets/d/19taV1maM4t2XItQgcMHZJmBl4vOdkL2qJk1a15Ojul8/pubhtml?gid=400854402&single=true"
data.frm <- readSpreadsheet(url.frm)
answer <- stri_flatten(data.frm[1,9])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
# doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
doc
answer <- stri_flatten(data.frm[1,3])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
# doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
data.frm[1,3]
doc
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,4])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,5])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,6])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,7])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,8])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,9])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,10])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,11])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,12])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,13])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
answer <- stri_flatten(data.frm[1,14])
doc <- Corpus(VectorSource(answer))
# Clean corpus - plain text
doc1 <- tm_map(doc, PlainTextDocument)
doc2 <- tm_map(doc1, stripWhitespace)
doc3 <- tm_map(doc2, removeWords, stopwords("english"))
doc3 <- tm_map(doc3, removeWords, stopwords("dutch"))
doc4 <- tm_map(doc3, stemDocument, language = "dutch")
# doc4 <- tm_map(doc4, stemDocument, language = "english")
doc5 <- tm_map(doc4, removePunctuation)
doc6 <- tm_map(doc5, tolower)
doc7 <- tm_map(doc6, PlainTextDocument)
docTDM <- DocumentTermMatrix(doc7)
inspect(docTDM)
install.packages("RPostgreSQL")
library("RPostgreSQL")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="tweety")
con <- dbConnect(drv, dbname="tweety",host="localhost",port=1234,user="postgres",password="n1d2a")
con <- dbConnect(drv, dbname="tweety",host="localhost",port=5432,user="postgres",password="n1d2a")
myTable <- dbReadTable(con, "test")
myTable
name1 <- c("jan", "piet", "klaas")
name2 <- c("", "ter", "van")
name3 <- c("klaassen", "pol", "vleten")
myTable <- data.frame(name1, name2, name3)
name1 <- c("jan", "piet", "klaas")
name2 <- c("", "ter", "van")
name3 <- c("klaassen", "pol", "vleten")
myTable <- data.frame(name1, name2, name3)
dbWriteTable(con, "test", value=myTable,overwrite=TRUE,row.names=FALSE)
name1 <- c("jan", "piet", "klaas")
name2 <- c("", "ter", "van")
name3 <- c("klaassen", "pol", "vleten")
myTable <- data.frame(name1, name2, name3)
dbWriteTable(con, "test", value=myTable,overwrite=TRUE,  row.names=FALSE)
dbDisconnect(con)
install.packages("RMySQL")
install.packages('RMySQL', type='source')
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL', type='source')
install.packages('RMySQL', type='source')
drv <- dbDriver("MySQL")
con <- dbConnect(drv, dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
library("RmySQL")
drv <- dbDriver("MySQL")
con <- dbConnect(drv, dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
drv <- dbDriver("MySQL()")
con <- dbConnect(drv, dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
library("RmySQL")
drv <- dbDriver("MySQL()")
con <- dbConnect(drv, dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
dbDisconnect(con)
library("RmySQL")
drv <- dbDriver("MySQL()")
con <- dbConnect(drv, dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
con <- dbConnect(MySQL(), dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
library("RmySQL")
con <- dbConnect(MySQL(), dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
con2 <- dbConnect(MySQL(),
dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
library("RMySQL")
con <- dbConnect(MySQL(),
dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
con <- dbConnect(MySQL(),
dbname="tweety",
host="server7.bhosted.nl",
port=3307,
user=" wfth1969@10.3.0.61",
password="Eulerepii=-1")
con <- dbConnect(MySQL(),
dbname="allmoocs",
host="server7.bhosted.nl",
port=3307,
user=" wfth1969",
password="Eulerepii=-1")
con <- dbConnect(MySQL(),
dbname="allmoocs",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
con <- dbConnect(MySQL(),
dbname="allmoocs",
host="server7.bhosted.nl",
port=3307,
user="wfth1969@10.3.0.61",
password="Eulerepii=-1")
con <- dbConnect(MySQL(),
dbname="allmoocs",
host="server7.bhosted.nl",
port=3306,
user="wfth1969@10.3.0.61",
password="Eulerepii=-1")
library("RMySQL")
con <- dbConnect(MySQL(),
dbname="quizii",
host="localhost",
port=3306,
user="root")
library("RMySQL")
con <- dbConnect(MySQL(),
dbname="quizii",
host="localhost",
port=3306,
user="tweety",
password="Sandra11")
df <- dbReadTable(con, "sessions")
dbWriteTable(conn = con, name = 'sessions', value = as.data.frame(c("me", 252, 1, 2, 4, 52, "12:00")))
dbWriteTable(conn = con, name = 'sessions',
value = c("me", 252, 1, 2, 4, 52, "12:00"))
dbWriteTable(conn = con, name = 'new',
value = as.data.frame(c("me", 252, 1, 2, 4, 52, "12:00")))
dbWriteTable(conn = con, name = 'new',
value = as.data.frame(c("me", 252, 1, 2, 4, 52, "12:00")))
dbDisconnect(con)
con <- dbConnect(MySQL(),
dbname="quizii",
host="localhost",
port=3306,
user="tweety",
password="Sandra11")
dbWriteTable(conn = con, name = 'new',
value = as.data.frame(c("me", 252, 1, 2, 4, 52, "12:00")))
df <- as.data.frame(c("me", 252, 1, 2, 4, 52, "12:00"))
df
df <- as.data.frame(c(name = "me", id = 252, q1 = 1, q2 = 2, q3 = 4, score = 52, time = "12:00"))
df
df <- as.data.frame(c(name = c("me"), id = c(252), q1 = c(1), q2 = c(2), score = c(52), time = c("12:00"))
q
df <- as.data.frame(c(name = c("me"),
id = c(252), q1 = c(1), q2 = c(2), score = c(52), time = c("12:00")))
df
str(df)
df <- data.frame(c(name = "me", id = 252, q1 = 1, q2 = 2, score = 52, time = "12:00"))
df
df <- data.frame(name = "me", id = 252, q1 = 1, q2 = 2, score = 52, time = "12:00")
df
dbWriteTable(conn = con, name = 'new',
value = df)
dbDisconnect(con)
con2 <- dbConnect(MySQL(),
dbname="allmoocs",
host="server7.bhosted.nl",
port=3307,
user="wfth1969",
password="Eulerepii=-1")
library(diagram)
names <- c("KT1-3", "KT4", "KT5", "KT6", "KT7", "PT8", "TOP3/3", "BONUS = SCR PT8")
a = "SCORE"
b = "VOLD"
M <- matrix(nrow = 8, ncol = 8, byrow = TRUE, data = c(
# 1  4  5   6   7   8   T   B
0, 0, 0,  0,  0,  0,  0,  0,  #1
0, 0, 0,  0,  0,  0,  0,  0,  #4
0, 0, 0,  0,  0,  0,  0,  0,  #5
0, 0, 0,  0,  0,  0,  0,  0,  #6
0, 0, 0,  0,  0,  0,  0,  0,  #7
0, 0, 0,  0,  0,  0,  0,  0,  #8
0, a, a,  a,  a,  0,  0,  0,  #T
0, 0, 0,  0,  0,  b,  b,  0   #B
))
#
dg1 <- plotmat(M, pos = c(5, 2, 1),
curve = 0,
name = names,
lwd = 1,
box.lwd = 2,
cex.txt = 0.75,
cex.main = 2,
dtext = 0.1,
box.size = c(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.1),
box.type = "square",
box.prop = c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.2),
arr.type = "triangle",
arr.pos = 0.6,
arr.length = 0.1,
shadow.size = 0.01,
prefix = "",
relsize = 1,
main = "Bonussysteem")
#
setwd("~/CFA190115")
