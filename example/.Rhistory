PV <- sapply(c(1:Time), function(x) CFs*(1+DiscR)^(-1*x))
TotPV <- sum(PV)
PVs <- data.frame(Time = c(1:Time),PV)
h1 <- rCharts::Highcharts$new()
h1$chart(type='line')
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
# h1 <- hPlot(x = 'Time', y = 'PV', data = PVs, type = 'line')
h1$title(text = paste0('Verloop Contante Waarde in Tijd met C = ', CFs, ' en R = ', DiscR*100, '%'))
h1$tooltip(formatter = "#! function(){return('<b>t: </b>' + this.x + '<br/>' + '<b>PV: </b>' + this.y);} !#")
h1$colors(c('rgb(255,85,0)', 'rgb(255,85,0)'))
h1$legend(enabled = FALSE)
h1$xAxis(categories = PVs$Time, tickInterval = 50, title = list(text = 'Tijd'))
h1$yAxis(title = list(text = 'Contante Waarde'))
h1$addParams(width = 600, height = 300, dom = 'chart1')
h1
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/NPV')
slidify('index.Rmd')
setwd("C:/Users/NB/Google Drive/ADVFIN/R/firstdeck")
slidify('index.Rmd')
install_github("slidifyLibraries", "ramnathv", ref="dev")
library('devtools')
install_github("slidifyLibraries", "ramnathv", ref="dev")
install_github("slidify", "ramnathv")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
library("slidifyLibraries", lib.loc="~/R/win-library/3.1")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
DiscR <- 8
CFs <- 1000
Time <- 300
PV <- reactive({sapply(c(1:Time), function(x) CFs*(1+(DiscR()/100)^(-1*x)))})
PVCum <- reactive({round(cumsum(PV()),0)})
PVCum
DiscR <- 8
CFs <- 1000
Time <- 300
PV <- sapply(c(1:Time), function(x) CFs*(1+(DiscR()/100)^(-1*x)))
PVCum <- round(cumsum(PV()),0)
DiscR <- 8
CFs <- 1000
Time <- 300
PV <- sapply(c(1:Time), function(x) CFs*(1+(DiscR/100)^(-1*x)))
PVCum <- round(cumsum(PV,0)
PVCum
DiscR <- 8
CFs <- 1000
Time <- 300
PV <- sapply(c(1:Time), function(x) CFs*(1+(DiscR/100)^(-1*x)))
PVCum <- round(cumsum(PV,0))
DiscR <- 8
CFs <- 1000
Time <- 300
PV <- sapply(c(1:Time), function(x) CFs*(1+(DiscR/100)^(-1*x)))
PVCum <- round(cumsum(PV),0)
PVCum
DiscR <- 8
CFs <- 1000
Time <- 300
PV <- sapply(c(1:Time), function(x) CFs*(1+DiscR/100)^(-1*x))
PVCum <- round(cumsum(PV),0)
PVCum
DiscR <- 8
CFs <- 1000
Time <- 300
PV <- sapply(c(1:Time), function(x) CFs*(1+DiscR/100)^(-1*x))
PVCum <- cumsum(PV)
PVCum
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
slidify('index.Rmd')
slidify('index.Rmd')
library(rCharts)
CFs <- c(200, 500, 300)
DiscR <- 0.05
Time <- length(CFs)
PV <- sapply(c(1:Time), function(x) CFs*(1+DiscR)^(-1*x))
TotPV <- sum(PV)
PVs <- data.frame(Time = c(1:Time),PV)
h1 <- rCharts::Highcharts$new()
h1$chart(type='line')
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
# h1 <- hPlot(x = 'Time', y = 'PV', data = PVs, type = 'line')
h1$title(text = paste0('Verloop Contante Waarde in Tijd met C = ', CFs, ' en R = ', DiscR*100, '%'))
h1$tooltip(formatter = "#! function(){return('<b>t: </b>' + this.x + '<br/>' + '<b>PV: </b>' + this.y);} !#")
h1$colors(c('rgb(255,85,0)', 'rgb(255,85,0)'))
h1$legend(enabled = FALSE)
h1$xAxis(categories = PVs$Time, tickInterval = 50, title = list(text = 'Tijd'))
h1$yAxis(title = list(text = 'Contante Waarde'))
# h1$params$width <-200
# h1$params$height <- 200
h1
library(rCharts)
CFs <- c(200, 500, 300)
DiscR <- 0.05
Time <- length(CFs)
PV <- sapply(c(1:Time), function(x) CFs*(1+DiscR)^(-1*x))
TotPV <- sum(PV)
PVs <- data.frame(Time = c(1:Time),PV)
h1 <- rCharts::Highcharts$new()
h1$chart(type='line')
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
# h1 <- hPlot(x = 'Time', y = 'PV', data = PVs, type = 'line')
h1$title(text = paste0('Verloop Contante Waarde in Tijd met R = ', DiscR*100, '%'))
h1$tooltip(formatter = "#! function(){return('<b>t: </b>' + this.x + '<br/>' + '<b>PV: </b>' + this.y);} !#")
h1$colors(c('rgb(255,85,0)', 'rgb(255,85,0)'))
h1$legend(enabled = FALSE)
h1$xAxis(categories = PVs$Time, tickInterval = 50, title = list(text = 'Tijd'))
h1$yAxis(title = list(text = 'Contante Waarde'))
# h1$params$width <-200
# h1$params$height <- 200
h1
PVs
library(rCharts)
CFs <- c(200, 500, 300)
DiscR <- 0.05
Time <- length(CFs)
PV <- sapply(c(1:Time), function(x) CFs[x]*(1+DiscR)^(-1*x))
TotPV <- sum(PV)
PVs <- data.frame(Time = c(1:Time),PV)
h1 <- rCharts::Highcharts$new()
h1$chart(type='line')
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
# h1 <- hPlot(x = 'Time', y = 'PV', data = PVs, type = 'line')
h1$title(text = paste0('Verloop Contante Waarde in Tijd met R = ', DiscR*100, '%'))
h1$tooltip(formatter = "#! function(){return('<b>t: </b>' + this.x + '<br/>' + '<b>PV: </b>' + this.y);} !#")
h1$colors(c('rgb(255,85,0)', 'rgb(255,85,0)'))
h1$legend(enabled = FALSE)
h1$xAxis(categories = PVs$Time, tickInterval = 50, title = list(text = 'Tijd'))
h1$yAxis(title = list(text = 'Contante Waarde'))
# h1$params$width <-200
# h1$params$height <- 200
h1
library(rCharts)
CFs <- c(200, 500, 300, 200, 600)
DiscR <- 0.05
Time <- length(CFs)
PV <- sapply(c(1:Time), function(x) CFs[x]*(1+DiscR)^(-1*x))
TotPV <- sum(PV)
PVs <- data.frame(Time = c(1:Time),PV)
h1 <- rCharts::Highcharts$new()
h1$chart(type='line')
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
# h1 <- hPlot(x = 'Time', y = 'PV', data = PVs, type = 'line')
h1$title(text = paste0('Verloop Contante Waarde in Tijd met R = ', DiscR*100, '%'))
h1$tooltip(formatter = "#! function(){return('<b>t: </b>' + this.x + '<br/>' + '<b>PV: </b>' + this.y);} !#")
h1$colors(c('rgb(255,85,0)', 'rgb(255,85,0)'))
h1$legend(enabled = FALSE)
h1$xAxis(categories = PVs$Time, tickInterval = 50, title = list(text = 'Tijd'))
h1$yAxis(title = list(text = 'Contante Waarde'))
# h1$params$width <-200
# h1$params$height <- 200
h1
library(rCharts)
CFs <- c(200, 500, 300, 200, 600)
DiscR <- 0.05
Time <- length(CFs)
PV <- sapply(c(1:Time), function(x) CFs[x]*(1+DiscR)^(-1*x))
TotPV <- sum(PV)
PVs <- data.frame(Time = c(1:Time),PV)
table(PVs)
h1 <- rCharts::Highcharts$new()
h1$chart(type='line')
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
h1$series(data = PVs$PV, marker= list(symbol = 'circle'))
# h1 <- hPlot(x = 'Time', y = 'PV', data = PVs, type = 'line')
h1$title(text = paste0('Verloop Contante Waarde in Tijd met R = ', DiscR*100, '%'))
h1$tooltip(formatter = "#! function(){return('<b>t: </b>' + this.x + '<br/>' + '<b>PV: </b>' + this.y);} !#")
h1$colors(c('rgb(255,85,0)', 'rgb(255,85,0)'))
h1$legend(enabled = FALSE)
h1$xAxis(categories = PVs$Time, tickInterval = 50, title = list(text = 'Tijd'))
h1$yAxis(title = list(text = 'Contante Waarde'))
# h1$params$width <-200
# h1$params$height <- 200
h1
setwd("C:/Users/NB/Google Drive/ADVFIN/R/Annuity")
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
slidify('index.Rmd')
setwd("~/GitHub/witusj.github.io/example")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/PV Cash')
shiny::runApp('C:/Users/NB/Google Drive/ADVFIN/R/Geom Series')
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-1/(1+DiscR/100)^7)/DiscR/100
AnnF
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^7)/(DiscR/100)
AnnF
Ann <- PV/AnnF
Ann
PV
AnnF
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
Ann
PV <- c(50000)
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[1]
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[1]
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[2:t] <- sapply(x = c(1:t-1), function(x) PV[x]*(1+DiscR)-Ann)
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[c(2:t)] <- sapply(x = c(1:t-1), function(x) PV[x]*(1+DiscR/100)-Ann)
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV <- sapply(x = c(1:t-1), function(x) PV[x]*(1+DiscR/100)-Ann)
t-1
PV[1] <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[x]*(1+DiscR/100)-Ann)
PV
PV[1] <- 50000
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[x]*(1+DiscR/100)-Ann)
PV
PV[1] <- 50000
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[x]*(1+DiscR/100)-Ann)
PV
PV[1] <- as.vector(c(50000))
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[x]*(1+DiscR/100)-Ann)
PV[1] <- as.vector(c(50000))
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV[1]/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[x]*(1+DiscR/100)-Ann)
PV[1]
PV[1] <- as.vector(50000)
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV[1]/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[x]*(1+DiscR/100)-Ann)
PV[1]
PV[1] <- c(50000)
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV[1]/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[x]*(1+DiscR/100)-Ann)
PV[1]
PV[1] <- c(50000)
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV[[1]]/AnnF
PV[[2:t]] <- sapply(1:t-1, function(x) PV[[x]]*(1+DiscR/100)-Ann)
PV[1] <- c(50000)
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV[[1]]/AnnF
PV[[2:t]] <- sapply(1:t-1, function(x) PV[[x]]*(1+DiscR/100)-Ann)
PV
PV <- NULL
PV
PV[[1]] <- c(50000)
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV[[1]]/AnnF
PV[[2:t]] <- sapply(1:t-1, function(x) PV[[x]]*(1+DiscR/100)-Ann)
PV[[1]] <- c(50000)
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV[[1]]/AnnF
PV[2:t] <- sapply(1:t-1, function(x) PV[[x]]*(1+DiscR/100)-Ann)
PV
PV[1] <- c(50000)
PV[1]
PV[2] <- 5
PV
PV <- 50000
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for i in c(2:t) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
PV <- 50000
DiscR <- 5
t <- 3
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
PV
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
PV
Ann
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
for(i in c(1:t)) {
Int[i] <- PV[i]*(DiscR/100)
}
PV <- 50000
DiscR <- 5
t <- 10
Int <- NULL
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
for(i in c(1:t)) {
Int[i] <- PV[i]*(DiscR/100)
}
Int
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
Int <- sapply(c(1:t), function(x) PV[x]*DiscR/100)
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
Int <- sapply(c(1:t), function(x) PV[x]*DiscR/100)
Amm <- sapply(c(1:t), function(x) Ann - Int[x])
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
Int <- sapply(c(1:t), function(x) PV[x]*DiscR/100)
Amm <- sapply(c(1:t), function(x) Ann - Int[x])
AmmTbl <- data.frame(PV,rep(Ann,t),Int,Amm)
AmmTbl
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
Int <- sapply(c(1:t), function(x) PV[x]*DiscR/100)
Amm <- sapply(c(1:t), function(x) Ann - Int[x])
AmmTbl <- data.frame(PV,rep(Ann,t),Int,Amm)
AmmTbl$Rem <- AmmTbl$PV - AmmTbl$Amm
AmmTbl
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
Int <- sapply(c(1:t), function(x) PV[x]*DiscR/100)
Amm <- sapply(c(1:t), function(x) Ann - Int[x])
AmmTbl <- data.frame(PV,rep(Ann,t),Int,Amm)
AmmTbl$Rem <- round(AmmTbl$PV - AmmTbl$Amm,0)
AmmTbl
PV <- 50000
DiscR <- 5
t <- 10
AnnF <- (1-(1/(1+DiscR/100))^t)/(DiscR/100)
Ann <- PV/AnnF
for(i in c(2:t)) {
PV[i] <- PV[i-1]*(1+DiscR/100)-Ann
}
Int <- sapply(c(1:t), function(x) PV[x]*DiscR/100)
Amm <- sapply(c(1:t), function(x) Ann - Int[x])
AmmTbl <- data.frame(PV,Ann = rep(Ann,t),Int,Amm)
AmmTbl$Rem <- round(AmmTbl$PV - AmmTbl$Amm,0)
AmmTbl
